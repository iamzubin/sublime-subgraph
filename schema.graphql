enum Status {
  VERIFIED
  UNVERIFIED
}

enum LoanStatus {
  INACTIVE
  ACTIVE
  CLOSED
  CANCELLED
  DEFAULTED
  TERMINATED
}

type GlobalPoolDetails @entity{

  id:ID!
  collectionPeriod:BigInt!
  matchCollateralRatioInterval:BigInt!
  marginCallDuration:BigInt!
  collateralVolatilityThreshold:BigInt!
  gracePeriodPenaltyFraction:BigInt!
  liquidatorRewardFraction:BigInt!
  votingPassRatio:BigInt!
  gracePeriodFraction:BigInt!

}

type LendingDetails @entity {
  id: ID!
  pool: Pool!
  lender: User!
  # amountSupplied: BigInt!
  amountWithdrawn: BigInt!
  repaymentWithdrawn: BigInt
  # collateralCalled: Boolean!
  lastVoteTime:BigInt
  marginCallEndTime:BigInt
  extraLiquidityShares:BigInt!
  Balance:BigInt!
}

type Pool @entity {
  id: ID!
  poolId: Bytes!
  borrower: User!
  borrowAsset: Bytes!
  borrowAmountRequested:BigInt!
  minborrowAmountFraction:BigInt!
  matchCollateralRatioEndTime:BigInt!
  noOfRepaymentIntervals:BigInt!
  investedTo:Bytes!
  collateralAsset: Bytes!
  lendingRate: BigInt!
  borrowRate: BigInt!
  loanDuration: BigInt
  collateralRatio: BigInt!
  loanStatus: LoanStatus!
  # lentAmount: BigInt!
  # borrowedAmount: BigInt!
  # colleteralAmount: BigInt!
  amountRepaid: BigInt!
  loanStartTime: BigInt!
  nextRepayTime: BigInt
  # collateralCalls: BigInt
  # whitelistedAddress: [Bytes!]
  # voteWeight: BigInt
  baseLiquidityShares:BigInt!
  extraLiquidityShares:BigInt!
  noOfGracePeriodsTaken:BigInt!
  nextDuePeriod:BigInt!
  repayExtensionEndTime: BigInt
  lenders: [LendingDetails!] @derivedFrom(field: "pool")
  # liquidatedLenders: [poolLiquidation!] @derivedFrom(field: "pool")
  poolLiquidated: poolLiquidation 
}

type poolLiquidation @entity{
  id:ID!
  pool: Pool!
  lender: bytes
  liquidator:bytes!
  liquidatedAmount: BigInt!
  timeStamp:BigInt!
  suppliedAmount: BigInt!
}

type User @entity {
  id: ID!
  address: Bytes!
  borrowingPools: [Pool!] @derivedFrom(field: "borrower")
  lendingPools: [LendingDetails!] @derivedFrom(field: "lender")
  savingAccount: SavingAccount
  status: Status!
  twitterDetails: TwitterDetails
}

type TwitterDetails @entity {
  id: ID!
  twitterId: Bytes!
  twitterSignMessage: String!
  registarationTime: BigInt!  
  linkedAddresses: [Bytes!]!
}


type SavingAccount @entity {
  id: ID!
  user: User!
  deposits: [SavingsAccountInfo!]! @derivedFrom(field: "savingAccount")
  allowances: [SavingsAccountInfo!]! @derivedFrom(field: "savingAccount")
}

type SavingsAccountInfo @entity {
  id: ID!
  asset: Bytes!
  amount: BigInt!
  strategy: Bytes!
  savingAccount: SavingAccount!
}

enum CreditLineStatus {

 REQUESTED
 ACTIVE
 CLOSED
 CANCELLED
}

type CreditLineCollateralInfo @entity {
  id: ID!
  amount: BigInt!
  strategy: Bytes!
  creditLines: CreditLines!
}

type CreditLines @entity{
  id: ID!
  CreditLineHash: bytes!
  lender: Bytes!
  BorrowLimit:BigInt!
  liquidationThreshold:BigInt
  borrowRate:BigInt!
  AutoLiquidation:BigInt!
  idealCollateralRatio: BigInt!
  BorrowAsset: Bytes!
  Borrower: Bytes!
  liquidatedCreditLine: creditLineLiquidation
  creditLineStatus:CreditLineStatus!
  principal:BigInt!
  totalInterestRepaid:BigInt!
  lastPrincipalUpdateTime:BigInt!
  interestAccruedTillPrincipalUpdate:BigInt!
  collateralAmount:BigInt!
  autoLiquidation:Boolean!
  requestByLender:Boolean!
  collateralShareInStrategy: [CreditLineCollateralInfo!]! @derivedFrom(field: "CreditLines")
}

type creditLineLiquidation @entity{
  id:ID!
  creditLine: CreditLines!
  Borrower: bytes!
  liquidator:bytes!
  liquidatedAmount: BigInt!
  suppliedAmount: BigInt!
  timeStamp:BigInt!
}
