enum Status {
  VERIFIED
  UNVERIFIED
}

enum LoanStatus {
  Collecting
  Active
  Closed
  Cancelled
  Defaulted
  Terminated
}

type GlobalPoolDetail @entity{
  id:ID!
  admin: String!
  collectionPeriod:BigInt
  matchCollateralRatioInterval:BigInt
  marginCallDuration:BigInt
  collateralVolatilityThreshold:BigInt
  gracePeriodPenaltyFraction:BigInt
  liquidatorRewardFraction:BigInt
  votingPassRatio:BigInt
  gracePeriodFraction:BigInt

}

type LendingDetails @entity {
  id: ID!
  pool: Pool
  lender: User
  # amountSupplied: BigInt
  amountWithdrawn: BigInt
  repaymentWithdrawn: BigInt
  collateralCalled: Boolean
  lastVoteTime:BigInt
  marginCallEndTime:BigInt
  exraLiquidityShares:BigInt
  Balance:BigInt
}
type LendingDetailscopy @entity {
  id: ID!
  pool: Pool
  lender: User
  # amountSupplied: BigInt
  # amountWithdrawn: BigInt
  # repaymentWithdrawn: BigInt
  # collateralCalled: Boolean
  # lastVoteTime:BigInt
  # marginCallEndTime:BigInt
  # exraLiquidityShares:BigInt
  Balance:BigInt
}

type Pool @entity {
  id: ID!
  borrower: User
  borrowAsset: Bytes
  borrowAmountRequested:BigInt
  minborrowAmount:BigInt
  matchCollateralRatioEndTime:BigInt
  noOfRepaymentIntervals:BigInt
  investedTo:Bytes
  collateralAsset: Bytes
  lendingRate: BigInt
  borrowRate: BigInt
  loanDuration: BigInt
  idealCollateralRatio: BigInt
  loanStatus: LoanStatus
  repaymentInterval:BigInt
  poolSavingsStrategy:Bytes
  # collateralShare:BigInt
  # lentAmount: BigInt
  # borrowedAmount: BigInt
  # collateralAmount: BigInt
  loanWithdrawalDeadline:BigInt
  amountRepaid: BigInt
  loanStartTime: BigInt
  nextRepayTime: BigInt
  # collateralCalls: BigInt
  # whitelistedAddress: [Bytes]
  # voteWeight: BigInt
  baseLiquidityShares:BigInt
  extraLiquidityShares:BigInt
  noOfGracePeriodsTaken:BigInt
  nextDuePeriod:BigInt
  repayExtensionEndTime: BigInt
  # lenders: [LendingDetails!] @derivedFrom(field: "pool")
  liquidatedLenders: [poolLiquidation!] @derivedFrom(field: "pool")
  poolLiquidated: poolLiquidation 
  published: BigInt
}

type poolLiquidation @entity{
  id:ID!
  pool: Pool
  lender: Bytes
  liquidator:Bytes
  liquidatedAmount: BigInt
  timeStamp:BigInt
  suppliedAmount: BigInt
}

type User @entity {
  id: ID!
  borrowingPools: [Pool!] @derivedFrom(field: "borrower")
  lendingPools: [LendingDetailscopy!] @derivedFrom(field: "lender")
  status: Status!
  twitterDetails: TwitterDetail
}
  
type TwitterDetail @entity {
  id: ID!
  twitterId: Bytes!
  twitterSignMessage: String
  registrationTime: BigInt  
  linkedAddresses: [Bytes!]
}

type SavingAccount @entity {
  id: ID!
  user: User
  deposits: [SavingsDeposit!] @derivedFrom(field: "savingAccount")
  allowances: [SavingsDeposit!] @derivedFrom(field: "savingAccount")
}

type SavingsDeposit @entity {
  id: ID!
  asset: Bytes
  amount: BigInt
  strategy: Bytes
  savingAccount: SavingAccount
  liquidityShare: BigInt
}


enum CreditLineStatus {

  NOT_CREATED
  REQUESTED
  ACTIVE
  CLOSED
  CANCELLED
  LIQUIDATED
}

type CreditLineCollateralInfo @entity {
  id: ID!
  amount: BigInt
  strategy: Bytes
  creditLines: CreditLine
}

type CreditLine @entity{
  id: ID!
  CreditLineHash: Bytes
  lender: Bytes
  BorrowLimit:BigInt
  liquidationThreshold:BigInt
  borrowRate:BigInt
  idealCollateralRatio: BigInt
  BorrowAsset: Bytes
  Borrower: Bytes
  collateralAsset:Bytes
  creditLineStatus:CreditLineStatus
  liquidatedCreditLine: creditLineLiquidation
  principal:BigInt
  totalInterestRepaid:BigInt
  lastPrincipalUpdateTime:BigInt
  interestAccruedTillPrincipalUpdate:BigInt
  collateralAmount:BigInt
  autoLiquidation:Boolean
  requestByLender:Boolean
  collateralShareInStrategy: [CreditLineCollateralInfo!] @derivedFrom(field: "creditLines")
}

type creditLineLiquidation @entity{
  id:ID!
  creditLine: CreditLine
  Borrower: Bytes
  liquidator:Bytes
  liquidatedAmount: BigInt
  suppliedAmount: BigInt
  timeStamp:BigInt
}

